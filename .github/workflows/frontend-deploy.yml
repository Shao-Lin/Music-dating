name: 🚀 Deploy Frontend (dev)

on:
  push:
    branches: [TPPROJ-21]
    paths:
      - 'frontend/**'

jobs:
  deploy:
    name: Deploy Frontend to Server
    runs-on: ubuntu-latest

    steps:
      - name: 🔄 Checkout code
        uses: actions/checkout@v4
        with:
          ref: TPPROJ-21
          fetch-depth: 0  # Полный history для корректной работы

      - name: 🛠 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: 📦 Install dependencies
        working-directory: ./frontend
        run: |
          npm ci --legacy-peer-deps --prefer-offline
          npm audit fix --force

      - name: 🏗 Build project
        working-directory: ./frontend
        run: npm run build -- --production

      - name: 🧹 Clean target directory
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            sudo rm -rf /home/deployer/music-dating/frontend/*
            sudo mkdir -p /home/deployer/music-dating/frontend
            sudo chown -R deployer:deployer /home/deployer/music-dating/frontend

      - name: 🚚 Deploy files to Server
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "frontend/dist/*"
          target: "/home/deployer/music-dating/frontend/"
          strip_components: 1
          overwrite: true
          tar_tmp_path: "/tmp"

      - name: 🔄 Restart Services
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Если используете Docker
            cd /home/deployer/music-dating
            docker-compose -f docker-compose.frontend.yml down
            docker-compose -f docker-compose.frontend.yml up -d --build
            
            # Если используете Nginx/Systemd
            sudo systemctl restart nginx
            sudo systemctl restart frontend.service
            
            # Проверка доступности
            sleep 15
            curl -I http://localhost:3000 || exit 1

      - name: 📜 Check Logs
        uses: appleboy/ssh-action@v1.0.0
        if: ${{ failure() }}
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker logs music-dating_frontend_1 2>&1 | tail -n 100
            journalctl -u nginx --since "5 minutes ago" | tail -n 50