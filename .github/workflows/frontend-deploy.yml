name: 🚀 Deploy Frontend (dev)

on:
  pull_request:
    branches: [dev]
    paths:
      - 'frontend/**'

jobs:
  deploy:
    name: Deploy Frontend to Server
    runs-on: ubuntu-latest

    steps:
      - name: 🔄 Checkout code
        uses: actions/checkout@v4
        with:
          ref: dev  

      - name: 🛠 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: 📦 Install dependencies
        working-directory: ./frontend
        run: npm ci --legacy-peer-deps

      - name: 🏗 Build project
        working-directory: ./frontend
        run: npm run build

      - name: 🐳 Rebuild Docker containers
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /home/deployer/music-dating
            docker-compose -f docker-compose.frontend.yml down --volumes --remove-orphans
            rm -rf frontend/*
            docker system prune -af
            docker-compose -f docker-compose.frontend.yml up -d --build --force-recreate
            sleep 15  # Даем время контейнеру инициализироваться

      - name: 🚚 Deploy files to Server
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "frontend/dist/*"
          target: "/home/deployer/music-dating/frontend/"
          strip_components: 1
          overwrite: true
          debug: true

      - name: 🔍 Verify Deployment
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker ps -a
            docker logs music-dating_frontend_1